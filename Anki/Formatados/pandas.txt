001) Como renomear uma ou mais colunas de um dataframe no pandas?	df = df.rename(columns={'A': 'Coluna1', 'B': 'Coluna2'}) <br><br> df.columns = ['Coluna1', 'Coluna2']
002) Como alterar a ordem das colunas em um dataframe do pandas?	new_order = ['B', 'A', 'C'] <br> df = df[new_order]
003) Como obter uma lista dos nomes das colunas de um dataframe no pandas?	list(df.columns)
004) Como obter uma lista com os índices de um dataframe no pandas?	list(df.index)
005) Como obter uma lista com os nomes das colunas que sejam de um mais tipos no dataframe do pandas?	df.select_dtypes(include = 'int').columns <br><br> df.select_dtypes(include = ['float', 'int']).columns
006) Como acessar uma célula específica de um dataframe com base em seu índice e coluna (pegar seu valor e também poder alterar o valor)?	df.at[índice, coluna]
007) Como criar um dataframe do zero?	Defina um dicionário onde as chaves serão o nome das colunas colunas e os valores serão as linhas, a quantidade de valores (linhas) precisam ter o mesmo tamanho. <br><br> df = pd.DataFrame(dados)
008) Como salvar um dataframe no formato csv, excel ou parquet?	df.to_excel(excel_writer = 'arquivo_excel.xlsx', sheet_name= "Nome da aba", index = False) <br> df.to_csv(path_or_buf = "arquivo_csv.csv", sep = ";", index = False) <br> df.to_parquet(path = "arquivo.parquet", engine = "pyarrow", index = False)
009) Como instalar as bibliotecas do parquet para usar os dataframes do pandas?	pip install pandas pyarrow <br> pip install fastparquet
010) Como pegar o índice e transformar em uma coluna, por exemplo, um índice de datas?	df.reset_index(inplace=True) <br> df.rename(columns={'index': 'Date'}, inplace=True) <br><br> 1) Reseta o índice do dataframe porém não dropa esse índice, isso faz com que uma nova coluna seja criada <br> 2) Depois é só renomear essa nova coluna índice para o nome que você desejar
011) Como resetar o índice em um dataframe?	df.reset_index(inplace = True)
012) Como deletar uma ou mais colunas de um dataframe?	df.drop(columns=['A', 'C'], inplace = True) <br><br> del df['B'] <br><br> coluna_A = df.pop('A') <br> df = df.loc[:, df.columns != 'a']
013) Como apresenta a quantidade de classes em uma coluna e suas respectivas quantidades?	df['coluna'].value_counts()
014) Como criar um dataframe com base na filtragem de linhas de uma colunas em relação à uma lista?	novo_df = df[df['coluna1'].isin(lista)]
015) Como apresentar a soma dos valores nulos das colunas de um dataframe?	df.isnull().sum()
016) Como apresentar a média dos valores nulos das colunas de um dataframe?	df.isnull().mean()
017) Como apresentar as primeiras linhas de um dataframe, as últimas e linhas aleatórias?	df.head() <br> Por padrão apresenta as 5 primeiras linhas <br><br> df.tail() <br> Por padrão apresenta as 5 últimas linhas <br><br> df.sample() Por padrão apresenta 1 linha aleatória
018) Como apresentar dados básicos de um dataframe como, quantidade, média, desvio padrão, valor mínimo e máximo, quartil de 25, 50 e 75%?	df.describe()
019) Como apresentar os dados do dataframe referentes ao tipo de cada coluna, aos valores não nulos e a quantidade de memória utilizada?	df.info()
020) Como mostrar a quantidade de linhas de cada coluna em um dataframe?	df.count()
021) Como criar um novo dataframe, considerando algumas colunas de outro dataframe?	df_novo = df_antigo[[coluna_1, colunas_2]]
022) Como alterar o nome da coluna índice de um dataframe?	df_novo.index.name = "Data"
023) Como remover o nome da coluna índice de um dataframe?	df_novo.index.name = None
024) Como transformar um arquivo do formato series para o formato dataframe?	.to_frame()
025) Como criar um dataframe através de uma lista de tuplas?	colunas = ['coluna_1', 'coluna_2'] <br> df_rotacoes = pd.DataFrame(data = lista_de_tuplas, columns = colunas)
026) Como criar uma lista de tipos de colunas de um dataframe seguindo a sequência?	list(df.dtypes)
027) Como obter informações báiscas e iniciais das colunas não-numéricas de um dataframe, como seus valores únicos, a frequência?	df.describe(exclude = "number")
028) Como pegar somente uma coluna de um dataframe e deixá-la também em dataframe ao invés de series?	df_coluna_1 = df[["coluna_1"]]
029) Como visualizar o describe de um dataframe do pandas com os números com menos casas decimais?	with pd.option_context("float_format", "{:.1f}".format): <br> display(df_cereal.describe())
030) Com base em um dataframe do pandas, como faço para ferificar a soma e a média de linhas de todas as colunas que satisfazem uma determinada condição?	((df_cereal.select_dtypes(include="number") == 100) | (df_cereal.select_dtypes(include="number") == 50)).mean() * 100 <br><br> ((df_cereal.select_dtypes(include="number") < 100) & (df_cereal.select_dtypes(include="number") > 50)).mean() * 100 <br><br> df_cereal[df_cereal.isin([100, 50])].count()
031) Como mostrar a quantidade de valores únicos para cada coluna de um dataframe no pandas?	df.nunique()
032) Como mostrar quais são os valores únicos para uma determinada coluna de um dataframe no pandas?	df["coluna_1"].unique()
033) Como selecionar uma faixa de linhas e colunas para um dataframe no pandas?	df.iloc[3:7, 1:4] <br><br> df[3:7] # Seleciona somente as linhas
034) Como selecionar linhas e colunas específicas de um dataframe no pandas com base em seu índice numérico?	df.iloc[[1, 4, 7], [2, 5]]
035) Como selecionar linhas e colunas específicas de um dataframe no pandas com base em seus nomes?	df.loc[[1, 4, 7], ["coluna_1", "coluna_2"]]
036) Quais são os operadores lógicos de um dataframe no pandas (que também são utilizados no numpy)?	& # and <br> | # or <br> ~ # not
037) Como obter o valor máximo e o valor mínimo de cada coluna de um dataframe do pandas?	df.max() <br> df.min()
038) Como obter os índices das linhas que possuem o valor máximo e o valor mínimo para cada coluna de um dataframe do pandas?	df.idxmax() <br> df.idxmin()
039) Como usar o query no pandas?	df.query("coluna_1 > 100 and coluna_2 < 50") <br> df.query("coluna_1 > 100 or not coluna_2 < 50") <br> df.query("coluna_3 == 'classe_a' and coluna_4 != 'classe_b'")
040) Como usar o groupby no pandas?	df.groupby(["coluna_1", "coluna_2"])[["coluna_3", "coluna_4", "coluna_5"]].mean()